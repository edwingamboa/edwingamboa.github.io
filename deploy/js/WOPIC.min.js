/*! GameDevTemplateJS 0.0.1 | (c) 2013 Thomas Viktil */ 
!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){var d=new Phaser.Game(1e3,500,Phaser.AUTO,"WOPIC"),e=a("./states/boot"),f=a("./states/preloader"),g=a("./states/menu"),h=a("./states/levelOne");d.state.add("boot",e),d.state.add("preloader",f),d.state.add("menu",g),d.state.add("levelOne",h),d.state.start("boot")},{"./states/boot":10,"./states/levelOne":11,"./states/menu":12,"./states/preloader":13}],2:[function(a,b,c){var d;d=function(a,b,c){Phaser.Sprite.call(this,a.game,0,0,c),this.power=b,a.game.physics.arcade.enable(this),this.anchor.setTo(0,.5),this.checkWorldBounds=!0,this.outOfBoundsKill=!0,this.exists=!1},d.prototype=Object.create(Phaser.Sprite.prototype),d.prototype.constructor=d,b.exports=d},{}],3:[function(a,b,c){var d;d=function(a,b,c,d,e,f,g,h,i,j){Phaser.Sprite.call(this,a.game,b,c,d),this.speed=e,this.runningSpeed=f,this.healthLevel=g,this.maxHealthLevel=g,a.game.physics.arcade.enable(this),this.body.bounce.y=h,this.body.gravity.y=i,this.body.collideWorldBounds=!0,this.anchor.setTo(.5,.5),this.level=a,this.weapons=[],this.currentWeaponIndex=0,this.target=j},d.prototype=Object.create(Phaser.Sprite.prototype),d.prototype.constructor=d,d.prototype.moveLeft=function(){this.body.velocity.x=-this.speed,this.animations.play("left")},d.prototype.moveRight=function(){this.body.velocity.x=this.speed,this.animations.play("right")},d.prototype.runLeft=function(){this.body.velocity.x=-this.runningSpeed,this.animations.play("left")},d.prototype.runRight=function(){this.body.velocity.x=this.runningSpeed,this.animations.play("right")},d.prototype.stop=function(){this.body.velocity.x=0,this.animations.stop(),this.frame=4},d.prototype.fullHealthLevel=function(){return this.healthLevel===this.maxHealthLevel},d.prototype.increaseHealthLevel=function(a){this.healthLevel+=a,this.healthLevel>this.maxHealthLevel&&(this.healthLevel=this.maxHealthLevel)},d.prototype.decreaseHealthLevel=function(a){if(this.healthLevel-=a,this.healthLevel<=0){for(var b=0;b<this.weapons.length;b++)this.weapons[b].bullets.removeAll(),this.weapons[b].kill();this.kill()}},d.prototype.updateCurrentWeapon=function(){void 0!==this.currentWeapon&&this.currentWeapon.kill(),this.currentWeapon=this.weapons[this.currentWeaponIndex],this.currentWeapon.alive||this.currentWeapon.revive(),this.level.game.add.existing(this.currentWeapon)},d.prototype.nextWeapon=function(){this.currentWeaponIndex++,this.currentWeaponIndex===this.weapons.length&&(this.currentWeaponIndex=0),this.updateCurrentWeapon()},b.exports=d},{}],4:[function(a,b,c){var d,e=a("../prefabs/character");d=function(a,b,c,d,f,g,h,i){e.call(this,a,d,f,b,250,500,c,.2,300,g),this.animations.add("left",[0,1],10,!0),this.animations.add("right",[2,3],10,!0),this.healthLevelText=a.game.add.text(this.body.x,this.body.y-20,""+this.healthLevel,{fontSize:"12px",fill:"#000"}),this.rangeDetection=h,this.rangeAttack=i},d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.update=function(){this.body.velocity.x>0?this.animations.play("right"):this.body.velocity.x<0&&this.animations.play("left"),this.healthLevelText.x=this.body.x,this.healthLevelText.y=this.body.y-20,this.currentWeapon.rotation=this.level.game.physics.arcade.angleBetween(this,this.target)},d.prototype.updateHealhtLevel=function(){this.healthLevel>0?this.healthLevelText.text=""+this.healthLevel:(this.healthLevelText.text="",this.level.player.increaseScore(.1*this.maxHealthLevel))},b.exports=d},{"../prefabs/character":3}],5:[function(a,b,c){var d,e=a("./item");d=function(a,b,c,d,f,g,h){return e.call(this,h.game,"Health Pack"),Phaser.Sprite.call(this,h.game,f,g,a),this.anchor.set(.5),this.maxIncreasing=b,h.game.physics.arcade.enable(this),this.body.bounce.y=d,this.body.gravity.y=c,this.body.collideWorldBounds=!0,this.level=h,this},d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.pickUp=function(){this.kill()},d.prototype.use=function(){this.level.addHealthPack(this)},b.exports=d},{"./item":7}],6:[function(a,b,c){var d=a("../prefabs/healthPack"),e=function(a){Phaser.Sprite.call(this,a.game,a.game.camera.width/2,a.game.camera.height/2,"inventory_background"),this.anchor.set(.5),this.healthPackIcon=a.game.make.sprite(-this.width/2+20,-this.height/2+20,"healthPack"),this.healthPackIcon.inputEnabled=!0,this.healthPackIcon.input.priorityID=2,this.healthPackIcon.events.onInputDown.add(this.useHealthPack,this),this.closeButton=a.game.make.sprite(this.width/2,-this.height/2,"close"),this.closeButton.anchor.set(.5),this.closeButton.inputEnabled=!0,this.closeButton.input.priorityID=2,this.closeButton.events.onInputDown.add(this.close,this),this.addChild(this.closeButton),this.addChild(this.healthPackIcon),this.fixedToCamera=!0,this.visible=!1,this.items=[],this.level=a};e.prototype=Object.create(Phaser.Sprite.prototype),e.prototype.constructor=e,e.prototype.addItem=function(a){this.items.push(a)},e.prototype.showHealthPacks=function(){},e.prototype.close=function(){this.level.resume(),this.visible=!1},e.prototype.open=function(){this.level.pause(),this.visible=!0},e.prototype.useHealthPack=function(){this.close(),this.level.addHealthPack(new d("healthPack",10,300,.7+.2*Math.random(),this.level.player.body.x,100,this.level))},b.exports=e},{"../prefabs/healthPack":5}],7:[function(a,b,c){var d;d=function(a,b){this.type=b},d.prototype=Object.create(Phaser.Sprite.prototype),d.prototype.constructor=d,b.exports=d},{}],8:[function(a,b,c){var d,e=a("../prefabs/character");d=function(a,b,c){e.call(this,a,32,a.game.world.height-150,"character",250,500,100,.2,300,c),this.animations.add("left",[0,1,2,3],10,!0),this.animations.add("right",[5,6,7,8],10,!0),this.score=b},d.prototype=Object.create(e.prototype),d.prototype.constructor=d,d.prototype.jump=function(){this.body.velocity.y=-350},d.prototype.crouch=function(){this.animations.stop(),this.frame=9},d.prototype.increaseScore=function(a){this.score+=a,this.level.updateScoreText()},d.prototype.decreaseScore=function(a){this.score+=a,this.level.updateScoreText()},d.prototype.updateHealhtLevel=function(){this.level.updateHealthLevelText()},d.prototype.update=function(){this.currentWeapon.rotation=this.level.game.physics.arcade.angleToPointer(this)},b.exports=d},{"../prefabs/character":3}],9:[function(a,b,c){var d,e=a("../prefabs/bullet");d=function(a,b,c,d,f,g,h,i,j,k){Phaser.Sprite.call(this,a.game,b.x,b.y,d),this.anchor.set(.1,.5),this.numberOfBullets=c,this.power=j,this.bullets=a.game.add.group();for(var l=0;l<this.numberOfBullets;l++)this.bullets.add(new e(a,j,f));this.nextFire=g,this.bulletSpeed=h,this.fireRate=i,this.level=a,this.infinite=k,this.owner=b},d.prototype=Object.create(Phaser.Sprite.prototype),d.prototype.constructor=d,d.prototype.fire=function(a,b){this.level.game.time.now>this.nextFire&&(this.infinite||this.numberOfBullets>0)&&(this.currentBullet=this.bullets.getFirstExists(!1),this.currentBullet&&(this.currentBullet.reset(this.x,this.y),this.currentBullet.rotation=this.level.game.physics.arcade.angleToXY(this.currentBullet,a,b),this.currentBullet.body.velocity.x=Math.cos(this.currentBullet.rotation)*this.bulletSpeed,this.currentBullet.body.velocity.y=Math.sin(this.currentBullet.rotation)*this.bulletSpeed,this.nextFire=this.level.game.time.now+this.fireRate,this.numberOfBullets--))},d.prototype.update=function(){this.x=this.owner.x,this.y=this.owner.y},b.exports=d},{"../prefabs/bullet":2}],10:[function(a,b,c){var d;d=function(a){},d.prototype={preload:function(){this.load.image("loading","assets/images/loading.png"),this.load.image("load_progress_bar_dark","assets/images/progress_bar_bg.png"),this.load.image("load_progress_bar","assets/images/progress_bar_fg.png")},create:function(){this.game.input.maxPointers=1,this.game.state.start("preloader")}},b.exports=d},{}],11:[function(a,b,c){var d,e=a("../prefabs/inventory"),f=a("../prefabs/healthPack"),g=a("../prefabs/player"),h=a("../prefabs/weapon"),i=a("../prefabs/enemy");d=function(a){},d.prototype={preload:function(){this.game.stage.backgroundColor="#82CAFA"},create:function(){this.game.world.setBounds(0,0,3e3,500),this.game.physics.startSystem(Phaser.Physics.ARCADE),this.gameObjects=[],this.ammo=10,this.xDirection=1,this.player=new g(this,10,this.game.input.activePointer),this.game.add.existing(this.player),this.gameObjects.push(this.player),this.player.weapons.push(new h(this,this.player,30,"weapon","bullet1",1,2*this.player.runningSpeed,100,10,!1)),this.player.weapons.push(new h(this,this.player,40,"weapon","bullet2",1,2*this.player.runningSpeed,100,50,!1)),this.player.updateCurrentWeapon(),this.enemies=this.game.add.group(),this.gameObjects.push(this.enemies);for(var a=0;6>a;a++){var b=new i(this,"simple_enemy",70,this.game.camera.width-100+60*a,this.game.camera.height-100,this.player,this.game.camera.width-200,300);b.weapons.push(new h(this,b,1,"weapon","bullet1",1,2*this.player.runningSpeed,100,.5,!0)),b.updateCurrentWeapon(),this.enemies.add(b)}for(var c=0;c<this.player.weapons.length;c++){var d=new i(this,"strong_enemy",150,this.game.camera.width+500+100*c,this.game.camera.height-100,this.player,this.game.camera.width,400);d.weapons.push(new h(this,d,1,"weapon","bullet1",1,2*this.player.runningSpeed,100,8,!0)),d.updateCurrentWeapon(),this.enemies.add(d)}this.healthPacks=this.game.add.group(),this.gameObjects.push(this.healthPacks),this.addHealthPack(new f("healthPack",10,300,.7+.2*Math.random(),500,100,this)),this.platforms=this.game.add.group(),this.platforms.enableBody=!0,this.ground=this.platforms.create(0,this.game.world.height-64,"ground"),this.ground.scale.setTo(10,2),this.ground.body.immovable=!0,this.ledge=this.platforms.create(400,300,"ground"),this.ledge.body.immovable=!0,this.ledge=this.platforms.create(-150,200,"ground"),this.ledge.body.immovable=!0,this.scoreText=this.game.add.text(this.game.camera.width-300,16,"Score: "+this.player.score,{fontSize:"32px",fill:"#000"}),this.scoreText.fixedToCamera=!0,this.ammoText=this.game.add.text(this.game.width-300,this.game.world.height-50,"Ammo: "+this.player.currentWeapon.numberOfBullets,{fontSize:"32px",fill:"#000"}),this.ammoText.fixedToCamera=!0,this.healthLevelText=this.game.add.text(16,16,"Health: "+this.player.healthLevel,{fontSize:"32px",fill:"#000"}),this.healthLevelText.fixedToCamera=!0,this.cursors=this.game.input.keyboard.createCursorKeys(),this.changeKey=this.input.keyboard.addKey(Phaser.Keyboard.ENTER),this.changeKey.onDown.add(this.player.nextWeapon,this.player),this.game.renderer.renderSession.roundPixels=!0,this.game.camera.follow(this.player),this.inventory=new e(this),this.game.add.existing(this.inventory),this.inventoryButton=this.game.add.button(50,this.game.camera.height-30,"inventory_button",this.inventory.open,this.inventory),this.inventoryButton.anchor.setTo(.5,.5),this.inventoryButton.fixedToCamera=!0,this.inventoryButton.input.priorityID=1},update:function(){this.game.physics.arcade.collide(this.gameObjects,this.platforms),this.game.physics.arcade.collide(this.player,this.enemies),this.game.physics.arcade.collide(this.player,this.strongEnemy),this.game.physics.arcade.overlap(this.player,this.healthPacks,this.collectHealthPack,null,this);for(var a=0;a<this.player.weapons.length;a++)this.game.physics.arcade.overlap(this.enemies,this.player.weapons[a].bullets,this.bulletHitCharacter,null,this);for(var b=0;b<this.enemies.length;b++){for(var c=this.enemies.children[b],d=0;d<c.weapons.length;d++)this.game.physics.arcade.overlap(this.player,c.weapons[d].bullets,this.bulletHitCharacter,null,this);var e=this.game.physics.arcade.distanceBetween(this.player,c);e<=c.rangeDetection&&e>c.rangeAttack&&this.game.physics.arcade.moveToXY(c,this.player.x+c.rangeAttack,c.y),e<=c.rangeAttack&&(c.stop(),c.currentWeapon.fire(this.player.x,this.player.y))}this.game.physics.arcade.overlap(this.player,this.healthPacks,this.collectHealthPack,null,this),this.cursors.left.isDown?(this.xDirection=-1,this.game.input.keyboard.isDown(Phaser.Keyboard.X)?this.player.runLeft():this.player.moveLeft()):this.cursors.right.isDown?(this.xDirection=1,this.game.input.keyboard.isDown(Phaser.Keyboard.X)?this.player.runRight():this.player.moveRight()):this.player.stop(),this.cursors.up.isDown&&this.player.body.touching.down&&this.player.jump(),this.cursors.up.isDown&&this.player.body.touching.down,this.game.input.activePointer.isDown&&(this.player.currentWeapon.fire(this.game.input.activePointer.worldX,this.game.input.activePointer.worldY),this.updateAmmoText())},bulletHitCharacter:function(a,b){a.decreaseHealthLevel(b.power),a.updateHealhtLevel(),b.kill()},collectHealthPack:function(a,b){this.player.fullHealthLevel()?this.inventory.addItem(b):this.increaseHealthLevel(b.maxIncreasing),b.pickUp()},updateAmmoText:function(){this.ammoText.text="Ammo: "+this.player.currentWeapon.numberOfBullets},updateScoreText:function(){this.scoreText.text="Score: "+this.player.score},updateHealthLevelText:function(){this.player.healthLevel<=0&&this.game.state.start("menu"),this.healthLevelText.text="Health: "+this.player.healthLevel},increaseHealthLevel:function(a){this.player.increaseHealthLevel(a),this.updateHealthLevelText()},increaseScore:function(a){this.player.increaseScore(a),this.updateScoreText()},render:function(){this.game.debug.cameraInfo(this.game.camera,32,32)},addHealthPack:function(a){this.healthPacks.add(a)},pause:function(){this.game.physics.arcade.isPaused=!0},resume:function(){this.game.physics.arcade.isPaused=!1}},b.exports=d},{"../prefabs/enemy":4,"../prefabs/healthPack":5,"../prefabs/inventory":6,"../prefabs/player":8,"../prefabs/weapon":9}],12:[function(a,b,c){var d;d=function(a){},d.prototype={create:function(){var a=this.game.add.text(this.game.camera.width/2,this.game.camera.height/2,"New Game");a.font="Arial",a.fontSize=50,a.fontWeight="bold",a.fill="#0040FF",a.anchor.set(.5),a.inputEnabled=!0,a.events.onInputDown.add(this.newGame,this)},newGame:function(){this.game.state.start("levelOne")}},b.exports=d},{}],13:[function(a,b,c){var d;d=function(a){this.ready=!1},d.prototype={preload:function(){this.displayLoadScreen(),this.loadAssets()},displayLoadScreen:function(){var a=this.game.camera.width/2,b=this.game.camera.height/2;this.loading=this.game.add.sprite(a,b-20,"loading"),this.loading.anchor.setTo(.5,.5),this.barBg=this.game.add.sprite(a,b+40,"load_progress_bar_dark"),this.barBg.anchor.setTo(.5,.5),this.bar=this.game.add.sprite(a-192,b+40,"load_progress_bar"),this.bar.anchor.setTo(0,.5),this.load.setPreloadSprite(this.bar),this.load.onLoadComplete.addOnce(this.onLoadComplete,this)},loadAssets:function(){this.game.load.image("ground","assets/images/platform.png"),this.game.load.image("healthPack","assets/images/healthPack.png"),this.game.load.image("inventory_button","assets/images/inventory.png"),this.game.load.image("inventory_background","assets/images/inventory_background.png"),this.game.load.image("close","assets/images/close.png"),this.game.load.spritesheet("character","assets/sprites/character.png",32,48),this.game.load.spritesheet("simple_enemy","assets/sprites/simple_enemy.png",32,32),this.game.load.spritesheet("strong_enemy","assets/sprites/strong_enemy.png",64,64);for(var a=1;2>=a;a++)this.game.load.image("bullet"+a,"assets/images/bullet"+a+".png");this.game.load.image("weapon","assets/images/weapon.png")},update:function(){this.ready&&this.game.state.start("menu")},onLoadComplete:function(){this.ready=!0}},b.exports=d},{}]},{},[1,2,3,4,5,6,7,8,9,10,11,12,13]);